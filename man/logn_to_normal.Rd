% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/logn_to_normal.R
\name{logn_to_normal}
\alias{logn_to_normal}
\title{Convert Log-Normal parameters to Normal parameters}
\usage{
logn_to_normal(mu, covMatrix)
}
\arguments{
\item{mu}{Array object containing means of multivariate Log-Normal distribution}

\item{covMatrix}{Matrix object containing covariance matrix of multivariate Log-Normal distribution}
}
\value{
A list containing:\tabular{ll}{
  \code{is_valid_logN_corrMat} \tab Boolean flag which indicates if the input correlation matrix satisfies
   condition 1 \cr
   \tab \cr
   \code{can_log_transf_covMat} \tab Boolean flag which indicates if the input correlation matrix satisfies
   condition 2 \cr
   \tab \cr
   \code{validation_res} \tab Matrix object which contains a brief recap of the tested conditions on the input
   correlation matrix. It is composed by N(=number of Log-Normal variables couples)  and 8 columns:\cr
   \tab \itemize{
   \item{\code{var1}:} {numerical index of the first Log-Normal variable of the couple}
   \item{\code{var2}:} {numerical index of the second Log-Normal variable of the couple}
   \item{\code{lower}:} {lower bound for the range of Log-Normal correlation between \code{var1} and \code{var2}}
   \item{\code{upper}:} {upper bound for the range of Log-Normal correlation between \code{var1} and \code{var2}}
   \item{\code{tested_corr}:} {input correlation value between \code{var1} and \code{var2}}
   \item{\code{is_valid_bound}:} {numerical flag. If \emph{1} \code{tested_corr} is inside the range, \emph{0}
   otherwise}
   \item{\code{tested_for_logTransf}:} {value computed for testing condition 2 (\eqn{\rho12*cv1*cv2})}
   \item{\code{can_logTransf}:} {numerical flag. If \emph{1} covariance of normal distribution between
   \code{var1} and \code{var2} can be computed.}
   } \cr
   \tab \cr
   \code{muN} \tab Array object. It contains mean of multivariate Normal distribution associated to
                   Log-Normal one.\cr
   \tab \cr
   \code{sigmaN} \tab Matrix object. It contains covariance matrix of multivariate Normal distribution associated
                  to Log-Normal one.\cr
}
}
\description{
This function is used to convert mean vector and covariance matrix of a multivariate Log-Normal
distribution to mean vector and covariance matrix of the associated multivariate Normal distribution.
This function evaluate two conditions before computing the parameters of Normal distribution:
\enumerate{
\item For each couple of variables \eqn{X1}, \eqn{X2} is tested if \eqn{\rho12} is within a certain range
whose bounds are computed according to the CVs of \eqn{X1} and \eqn{X2}. This is a necessary condition (becomes
sufficent too when correlation matrix is a 2x2) for obtaining a PD correlation/covariance matrix for the
Normal distribution underlying the Log-Normal one. If it is not satisfied, a warning message is displayed
but covariance matrix of Normal distribution is still computed even if it is not PD.
\item For each couple of variables \eqn{X1}, \eqn{X2} is tested if \eqn{\rho12*cv1*cv2 > -1}. If exists a couple
which does not respect this condition, it means that covariance matrix of underlying Normal distribution cannot
be computed. In fact, the covariance between \eqn{X1}, \eqn{X2} of Normal distribution, \eqn{\sigma^2}12,
is defined as \eqn{ln((\rho12*cv1*cv2 )+1)}. In this case, a warning message will be displayed and a recap of
validation performed is returned.
}
}
\note{
This function tries to compute covariance matrix of multivariate Normal distribution even if input
Log-Normal covariance matrix is not PD. User should check that input matrix is PD. Even if input matrix is PD
and conditions 1 and 2 are fulfilled, covariance matrix of multivariate Normal distribution could not be PD
because condition 1 is only necessary (only if input matrix is a 2x2 it is sufficent too). In order to fix
this problem, \code{nearPD} of \code{Matrix} package could be used.
}
\examples{
#define correlations
corr<- diag(rep(1,4))
corr[1,4] <- 0.9
corr[4,1]<-corr[1,4]
corr[2,4] <- -0.3
corr[4,2] <- corr[2,4]
corr[3,2] <- -0.2
corr[2,3] <- corr[3,2]

#define sd of variables
sd2 <- array(c(rep(1,4)))
#obtain covariance matrix
covMatrix2 <- sd2\%*\%t(sd2)*corr
#define mean vector
mu2 <- array(rep(2.5,4))
logn_to_normal(mu2,covMatrix2)

#output:

# $is_valid_logN_corrMat
# [1] TRUE

# $can_log_transf_covMat
# [1] TRUE
#
# $validation_res
#       var1 var2     lower upper tested_corr is_valid_bound tested_for_logTransf can_logTransf
# [1,]    1    2 -0.862069     1         0.0              1                0.000             1
# [2,]    1    3 -0.862069     1         0.0              1                0.000             1
# [3,]    1    4 -0.862069     1         0.9              1                0.144             1
# [4,]    2    3 -0.862069     1        -0.2              1               -0.032             1
# [5,]    2    4 -0.862069     1        -0.3              1               -0.048             1
# [6,]    3    4 -0.862069     1         0.0              1                0.000             1

# $muN
# [1] 0.8420807 0.8420807 0.8420807 0.8420807

# $sigmaN
# [,1]        [,2]        [,3]        [,4]
# [1,] 0.1484200  0.00000000  0.00000000  0.13453089
# [2,] 0.0000000  0.14842001 -0.03252319 -0.04919024
# [3,] 0.0000000 -0.03252319  0.14842001  0.00000000
# [4,] 0.1345309 -0.04919024  0.00000000  0.14842001
}
\seealso{
\code{\link[Matrix]{nearPD}}

\code{\link{get_logNcorr_bounds}}

\code{\link{validate_logN_corrMatrix}}
}
\author{
Alessandro De Carlo \email{alessandro.decarlo01@universitadipavia.it}
}
